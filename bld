#!/bin/bash
set -e

function usage() {
    echo 1>&2 "Usage: $0 [-d] [-x] [-j] [-e ENVIRONMENT ] TAG"
    echo 1>&2 "  -d enables dry run (no Docker build or push)"
    echo 1>&2 "  -x is 'do not push' (but does build)."
    echo 1>&2 "  -j adds 'exp_' to front and '_jlbleed' to end of tag."
    echo 1>&2 "  default ENVIRONMENT=''; can be branch name (e.g. 'summit')"
    echo 1>&2 "  typical TAG='w_2020_25'"
    exit 2
}

giturl="https://github.com/lsst-sqre/sal-sciplat-lab"
BASE_IMAGE="lsstsqre/sciplat-lab"
IMAGE_NAME="lsstsqre/sal-sciplat-lab"
OPTIND=1
DRY_RUN=0
NOPUSH=0
JLBLEED=0
ENVIRONMENT=""
TAG_PREFIX=""
while getopts ':hdxje:' opt; do
    case $opt in
    h)
        usage
        ;;
    d)
        DRY_RUN=1
        ;;
    x)
        NOPUSH=1
        ;;
    j)
	JLBLEED=1
	;;
    e)
        ENVIRONMENT=${OPTARG}
        ;;
    \?)
        usage
        ;;
    esac
done
shift $((OPTIND - 1))
TAG=${1}
if [ -z "${TAG}" ] || [ $# -gt 1 ]; then
    usage
fi
dockerfile_template="Dockerfile.template"
if [ -n "${ENVIRONMENT}" ]; then
    IMAGE_NAME="${ENVIRONMENT}-{$IMAGE_NAME}"
    # Clone branch into tempdir
    tmpdir=$(mktemp -d)
    git clone ${giturl} -b ${ENVIRONMENT} ${tmpdir}
    dockerfile_template="${dockerfile_template}.$ENVIRONMENT"
    # Copy template from correct branch
    cp ${tempdir}/Dockerfile.template ${dockerfile_template}
    rm -rf ${tempdir}
fi
VERSION=${TAG/#v/r}
if [ "${JLBLEED}" -eq 1 ] ; then
    VERSION="exp_${VERSION}_jlbleed"
fi
sed -e "s|{{BASE_IMAGE}}|${BASE_IMAGE}|g" \
    -e "s|{{IMAGE_NAME}}|${IMAGE_NAME}|g" \
    -e "s|{{VERSION}}|${VERSION}|g" \
    -e "s|{{TAG}}|${TAG}|g" \
    < ${dockerfile_template} > Dockerfile
if [ "${NOPUSH}" -eq 1 ]; then
    VERSION="nopush_${VERSION}"
fi
if [ "${DRY_RUN}" -ne 0 ]; then
    echo 1>&2 "Dry run: Dockerfile written, stopping before build/push."
    exit 0
fi
./bld_1

